/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.jtattoo.plaf.graphite.GraphiteLookAndFeel;
import connector.ServerConnector;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.font.TextAttribute;
import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import model.DonModel;
import model.UserModel;
import observer.DonationObserverImpl;

/**
 *
 * @author Extreme
 */
public class Home extends javax.swing.JFrame {
    private Font font;
    private UserModel userModel;
    private ArrayList<DonModel> allDoantions;
    private ArrayList<DonModel> avaDoantions;
    private int avaDons;
    private int myDons;
    private int selectedBt = 1;
    private ArrayList<DonModel> myRequests;
    private int myReqs;
    /**
     * Creates new form Home
     */
    public Home(UserModel userModel) {
        initComponents();
        setLocationRelativeTo(null);
        underineLabels();
        this.userModel = userModel;
        getAllUnReqDons();
        getRequests();
        showAvailableDons();
        try {
            ServerConnector.getServerConnector().getDonController().addDonationObserver(new DonationObserverImpl(this));
        } catch (NotBoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        myAccBt = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        avaDonBt = new javax.swing.JLabel();
        myReqBt = new javax.swing.JLabel();
        myDonBt = new javax.swing.JLabel();
        container = new javax.swing.JPanel();
        newDonBt = new javax.swing.JButton();
        catCombo = new javax.swing.JComboBox();
        statusLabel = new javax.swing.JLabel();
        avDonPan = new javax.swing.JPanel();
        myDonPan = new javax.swing.JPanel();
        myReqPan = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        myAccBt.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        myAccBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Entypo_d83d(0)_64.png"))); // NOI18N
        myAccBt.setText("Account Settings");
        myAccBt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        myAccBt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                myAccBtMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 36)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/logoHeaderIcon.png"))); // NOI18N
        jLabel2.setText("WECare");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 390, Short.MAX_VALUE)
                .addComponent(myAccBt)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(myAccBt)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        avaDonBt.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        avaDonBt.setForeground(new java.awt.Color(0, 0, 255));
        avaDonBt.setText("Available Donations");
        avaDonBt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        avaDonBt.setOpaque(true);
        avaDonBt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                avaDonBtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                avaDonBtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                avaDonBtMouseExited(evt);
            }
        });

        myReqBt.setBackground(new java.awt.Color(255, 255, 255));
        myReqBt.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        myReqBt.setForeground(new java.awt.Color(0, 0, 255));
        myReqBt.setText("My Requests");
        myReqBt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        myReqBt.setOpaque(true);
        myReqBt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                myReqBtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                myReqBtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                myReqBtMouseExited(evt);
            }
        });

        myDonBt.setBackground(new java.awt.Color(255, 255, 255));
        myDonBt.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        myDonBt.setForeground(new java.awt.Color(0, 0, 255));
        myDonBt.setText("My Donations");
        myDonBt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        myDonBt.setOpaque(true);
        myDonBt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                myDonBtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                myDonBtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                myDonBtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(avaDonBt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(myReqBt, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(myDonBt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(avaDonBt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(myDonBt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(myReqBt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(366, Short.MAX_VALUE))
        );

        container.setBackground(new java.awt.Color(255, 255, 255));
        container.setLayout(null);

        newDonBt.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        newDonBt.setText("New Donation");
        newDonBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDonBtActionPerformed(evt);
            }
        });
        container.add(newDonBt);
        newDonBt.setBounds(446, 0, 140, 29);

        catCombo.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        catCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All Categories", "Electronics", "Household", "Stationary", "Books", "Clothing", "Sport", "Kids", "Other" }));
        catCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                catComboItemStateChanged(evt);
            }
        });
        container.add(catCombo);
        catCombo.setBounds(446, 0, 140, 26);

        statusLabel.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusLabel.setText("No Available Donations");
        container.add(statusLabel);
        statusLabel.setBounds(0, 0, 600, 150);

        avDonPan.setBackground(new java.awt.Color(255, 255, 255));
        avDonPan.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                avDonPanMouseWheelMoved(evt);
            }
        });
        avDonPan.setLayout(new java.awt.GridLayout(1, 1));
        container.add(avDonPan);
        avDonPan.setBounds(0, 0, 600, 150);

        myDonPan.setBackground(new java.awt.Color(255, 255, 255));
        myDonPan.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                myDonPanMouseWheelMoved(evt);
            }
        });
        myDonPan.setLayout(new java.awt.GridLayout(1, 1));
        container.add(myDonPan);
        myDonPan.setBounds(0, 0, 600, 150);

        myReqPan.setBackground(new java.awt.Color(255, 255, 255));
        myReqPan.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                myReqPanMouseWheelMoved(evt);
            }
        });
        myReqPan.setLayout(new java.awt.GridLayout(1, 0));
        container.add(myReqPan);
        myReqPan.setBounds(0, 0, 600, 150);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void avaDonBtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_avaDonBtMouseClicked
        avaDonBt.setBackground(new Color(240, 240, 240));
        myDonBt.setBackground(Color.white);
        myReqBt.setBackground(Color.white);
        selectedBt = 1;
        showAvailableDons();
    }//GEN-LAST:event_avaDonBtMouseClicked

    private void avaDonBtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_avaDonBtMouseEntered
        avaDonBt.setFont(font.deriveFont(25));
    }//GEN-LAST:event_avaDonBtMouseEntered

    private void avaDonBtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_avaDonBtMouseExited
        avaDonBt.setFont(font);
    }//GEN-LAST:event_avaDonBtMouseExited

    private void myReqBtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myReqBtMouseClicked
        myReqBt.setBackground(new Color(240, 240, 240));
        myDonBt.setBackground(Color.white);
        avaDonBt.setBackground(Color.white);
        selectedBt = 3;
        showMyReqs();
    }//GEN-LAST:event_myReqBtMouseClicked

    private void myReqBtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myReqBtMouseEntered
        myReqBt.setFont(font.deriveFont(25));
    }//GEN-LAST:event_myReqBtMouseEntered

    private void myReqBtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myReqBtMouseExited
        myReqBt.setFont(font);
    }//GEN-LAST:event_myReqBtMouseExited

    private void myDonBtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myDonBtMouseClicked
        myDonBt.setBackground(new Color(240, 240, 240));
        avaDonBt.setBackground(Color.white);
        myReqBt.setBackground(Color.white);
        selectedBt = 2;
        showMyDons();
    }//GEN-LAST:event_myDonBtMouseClicked

    private void myDonBtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myDonBtMouseEntered
        myDonBt.setFont(font.deriveFont(25));
    }//GEN-LAST:event_myDonBtMouseEntered

    private void myDonBtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myDonBtMouseExited
        myDonBt.setFont(font);
    }//GEN-LAST:event_myDonBtMouseExited

    private void myAccBtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myAccBtMouseClicked
        new UserAccount(userModel).setVisible(true);
    }//GEN-LAST:event_myAccBtMouseClicked

    private void catComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_catComboItemStateChanged
        sortDonations();
        showAvailableDons();
    }//GEN-LAST:event_catComboItemStateChanged

    private void newDonBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDonBtActionPerformed
        new DonationForm(userModel.getNic()).setVisible(true);
    }//GEN-LAST:event_newDonBtActionPerformed

    private void avDonPanMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_avDonPanMouseWheelMoved
        if (evt.getWheelRotation() > 0 && avDonPan.getY()+avDonPan.getHeight() > container.getHeight()) {
            avDonPan.setLocation(avDonPan.getX(), avDonPan.getY()-150);
        }else if (evt.getWheelRotation() < 0 && avDonPan.getY() < 0) {
            avDonPan.setLocation(avDonPan.getX(), avDonPan.getY()+150);
        }
    }//GEN-LAST:event_avDonPanMouseWheelMoved

    private void myDonPanMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_myDonPanMouseWheelMoved
        if (evt.getWheelRotation() > 0 && myDonPan.getY()+myDonPan.getHeight() > container.getHeight()) {
            myDonPan.setLocation(myDonPan.getX(), myDonPan.getY()-150);
        }else if (evt.getWheelRotation() < 0 && myDonPan.getY() < 0) {
            myDonPan.setLocation(myDonPan.getX(), myDonPan.getY()+150);
        }
    }//GEN-LAST:event_myDonPanMouseWheelMoved

    private void myReqPanMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_myReqPanMouseWheelMoved
        if (evt.getWheelRotation() > 0 && myReqPan.getY()+myReqPan.getHeight() > container.getHeight()) {
            myReqPan.setLocation(myReqPan.getX(), myReqPan.getY()-150);
        }else if (evt.getWheelRotation() < 0 && myReqPan.getY() < 0) {
            myReqPan.setLocation(myReqPan.getX(), myReqPan.getY()+150);
        }
    }//GEN-LAST:event_myReqPanMouseWheelMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
            */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
            //</editor-fold>
            
            UIManager.setLookAndFeel(new GraphiteLookAndFeel());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home(new UserModel()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel avDonPan;
    private javax.swing.JLabel avaDonBt;
    private javax.swing.JComboBox catCombo;
    private javax.swing.JPanel container;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel myAccBt;
    private javax.swing.JLabel myDonBt;
    private javax.swing.JPanel myDonPan;
    private javax.swing.JLabel myReqBt;
    private javax.swing.JPanel myReqPan;
    private javax.swing.JButton newDonBt;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables

    private void underineLabels() {
        font = myAccBt.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        font = font.deriveFont(attributes);
        myAccBt.setFont(font);
        avaDonBt.setFont(font);
        myDonBt.setFont(font);
        myReqBt.setFont(font);
    }
    
    private void getAllUnReqDons(){
        try {
            allDoantions = ServerConnector.getServerConnector().getDonController().getNotReqDoantions(userModel.getNic());
            sortDonations();
            
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void sortDonations(){
        avDonPan.removeAll();
        myDonPan.removeAll();
        
        avaDons = 0;
        myDons = 0;
        
        for (DonModel donModel : allDoantions) {
            
            if (!donModel.getDonar().equals(userModel.getNic()) && donModel.getRecipient().equals("") && (catCombo.getSelectedIndex() == 0 ? true:donModel.getCategory().equals(catCombo.getSelectedItem().toString()))){
                avDonPan.add(new AvaDonPanel(donModel,userModel.getNic(),this));
                avaDons++;
            }
            
            if (donModel.getDonar().equals(userModel.getNic())) {
                myDonPan.add(new MyDonPanel(donModel));
                myDons++;
            }
        }
        
        avDonPan.repaint();
        avDonPan.validate();
        
        myDonPan.repaint();
        myDonPan.validate();
        
        if (avaDons > 0) {
            avDonPan.setSize(600, 150*avaDons);
            GridLayout layout = (GridLayout)avDonPan.getLayout();
            layout.setRows(avaDons);
        }
        if (myDons > 0) {
            myDonPan.setSize(600, 150*myDons);
            GridLayout layout = (GridLayout)myDonPan.getLayout();
            layout.setRows(myDons);
        }
        
        container.repaint();
        container.validate();
    }
    
    private void showAvailableDons(){
        avDonPan.setVisible(true);
        myDonPan.setVisible(false);
        myReqPan.setVisible(false);
        catCombo.setVisible(true);
        newDonBt.setVisible(false);
        if (avaDons == 0) {
            statusLabel.setText("No Available Donations");
            statusLabel.setVisible(true);
        }else{
            statusLabel.setVisible(false);
        }
        
    }
    
    private void showMyDons(){
        avDonPan.setVisible(false);
        myDonPan.setVisible(true);
        myReqPan.setVisible(false);
        catCombo.setVisible(false);
        newDonBt.setVisible(true);
        if (myDons == 0) {
            statusLabel.setText("You Haven't Donate");
            statusLabel.setVisible(true);
        }else{
            statusLabel.setVisible(false);
        }
    }
    
    
    public void update(){
        getAllUnReqDons();
        getRequests();
        if (selectedBt == 1) {
            showAvailableDons();
        }else if (selectedBt == 2) {
            showMyDons();
        }else{
            showMyReqs();
        }
    }

    private void getRequests(){
        try {
            myRequests = ServerConnector.getServerConnector().getDonController().getReqDoantions(userModel.getNic());
            myReqPan.removeAll();
            myReqs = 0;
            for (DonModel req : myRequests){ 
                myReqPan.add(new MyReqPanel(req, userModel.getNic(),this));
                myReqs++;
            }
            myReqPan.repaint();
            myReqPan.validate();
            
            if (myReqs > 0) {
                myReqPan.setSize(600, 150*myReqs);
                GridLayout layout = (GridLayout)myReqPan.getLayout();
                layout.setRows(myReqs);
            }
            
            container.repaint();
            container.validate();
            
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void showMyReqs(){
        avDonPan.setVisible(false);
        myDonPan.setVisible(false);
        myReqPan.setVisible(true);
        catCombo.setVisible(false);
        newDonBt.setVisible(false);
        if (myReqs == 0) {
            statusLabel.setText("No Requests");
            statusLabel.setVisible(true);
        }else{
            statusLabel.setVisible(false);
        }
    }
    
}
