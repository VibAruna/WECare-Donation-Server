/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.jtattoo.plaf.graphite.GraphiteLookAndFeel;
import controller.ConnectionControllerImpl;
import controller.DonControllerImpl;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.Inet4Address;
import java.net.UnknownHostException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileNameExtensionFilter;
import other.Backup;

/**
 *
 * @author Extreme
 */
public class MainView extends javax.swing.JFrame {
    private static int port = 5050;
    private static String ipAddress = "192.168.1.3";
    private Registry donationRegistry;
    private static boolean serverStarted = false;
    private ImageIcon startIcon = new ImageIcon("./src/pics/FontAwesome_f04b(0)_64.png");
    private ImageIcon stopIcon = new ImageIcon("./src/pics/FontAwesome_f04d(1)_64.png");
    /**
     * Creates new form MainView
     */
    public MainView() {
        initComponents();
        setLocationRelativeTo(null);
        detailLb.setVisible(false);
        getPort();
        new Thread(){

            @Override
            public void run() {
                while (rootPaneCheckingEnabled) {                    
                    try {
                        detailLb.setText("IP Address : "+ipAddress);
                        Thread.sleep(2000);
                        detailLb.setText("Port       : "+port);
                        Thread.sleep(2000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            
        }.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        seveBackupBt = new javax.swing.JButton();
        restoreBt = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        userBt = new javax.swing.JButton();
        donBt = new javax.swing.JButton();
        reciBt = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        chPasBt = new javax.swing.JButton();
        chgPortBt = new javax.swing.JButton();
        serverBt = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();
        detailLb = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 36)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/logoHeaderIcon.png"))); // NOI18N
        jLabel1.setText("WECare");

        seveBackupBt.setBackground(new java.awt.Color(255, 255, 255));
        seveBackupBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Typicons_e10d(0)_64.png"))); // NOI18N
        seveBackupBt.setToolTipText("Save Backup");
        seveBackupBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seveBackupBtActionPerformed(evt);
            }
        });

        restoreBt.setBackground(new java.awt.Color(255, 255, 255));
        restoreBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/Typicons_e061(1)_64.png"))); // NOI18N
        restoreBt.setToolTipText("Restore Backup");
        restoreBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restoreBtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(seveBackupBt, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(restoreBt, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(seveBackupBt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(restoreBt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        userBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/UserIcon.png"))); // NOI18N
        userBt.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/UserIconPressed.png"))); // NOI18N
        userBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userBtActionPerformed(evt);
            }
        });

        donBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/DonationsIcon.png"))); // NOI18N
        donBt.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/DonationsPressedIcon.png"))); // NOI18N
        donBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donBtActionPerformed(evt);
            }
        });

        reciBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/RecipientIcon.png"))); // NOI18N
        reciBt.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/RecipientIconPressed.png"))); // NOI18N
        reciBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reciBtActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 86, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userBt, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addComponent(donBt, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(reciBt, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(reciBt, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(donBt, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userBt, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        chPasBt.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        chPasBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/changePasswordIcon.png"))); // NOI18N
        chPasBt.setText("Change Password");
        chPasBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chPasBtActionPerformed(evt);
            }
        });

        chgPortBt.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        chgPortBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/changePortIcon.png"))); // NOI18N
        chgPortBt.setText("Change Port");
        chgPortBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chgPortBtActionPerformed(evt);
            }
        });

        serverBt.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        serverBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/FontAwesome_f04b(0)_64.png"))); // NOI18N
        serverBt.setText("Turn Server On");
        serverBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverBtActionPerformed(evt);
            }
        });

        statusLabel.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusLabel.setText("Server Stopped...");

        detailLb.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        detailLb.setText("IP Address : 192.168.1.3");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(chPasBt, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chgPortBt, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(serverBt)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(detailLb))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chPasBt)
                    .addComponent(chgPortBt)
                    .addComponent(serverBt))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(detailLb)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userBtActionPerformed
        new ViewUserDetails().setVisible(true);
    }//GEN-LAST:event_userBtActionPerformed

    private void donBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donBtActionPerformed
        new ViewDonationDetails().setVisible(true);
    }//GEN-LAST:event_donBtActionPerformed

    private void reciBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reciBtActionPerformed
        new ChooseRecipients().setVisible(true);
    }//GEN-LAST:event_reciBtActionPerformed

    private void serverBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverBtActionPerformed
        try {    
            if (serverStarted) {                
                stopServer();
                serverBt.setText("Turn Server On");
                serverBt.setIcon(startIcon);
                serverStarted = false;
            }else{
                startServer();
                serverBt.setText("Turn Server Off");
                serverBt.setIcon(stopIcon);
                serverStarted = true;
            }
        } catch (RemoteException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnknownHostException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_serverBtActionPerformed

    private void chgPortBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chgPortBtActionPerformed
        saveNewPort("New Port : ");
        
    }//GEN-LAST:event_chgPortBtActionPerformed

    private void chPasBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chPasBtActionPerformed
        new NewPasswordDialog(this, true).setVisible(true);
    }//GEN-LAST:event_chPasBtActionPerformed

    private void seveBackupBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seveBackupBtActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int res = fileChooser.showSaveDialog(this);
        if (res == JFileChooser.APPROVE_OPTION) {
            new Thread(){

                @Override
                public void run() {
                    try {
                        //loadingLb.setVisible(true);
                        boolean writeBackup = Backup.writeBackup(fileChooser.getSelectedFile().getAbsolutePath());
                        //loadingLb.setVisible(false);
                        if (writeBackup) {
                            JOptionPane.showMessageDialog(null, "Backup Saved Successfully...");
                        }else{
                            JOptionPane.showMessageDialog(null, "Backup Saving Failed...");
                        }
                    } catch (InterruptedException ex) {
                        Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                
            }.start();
            
        }
    }//GEN-LAST:event_seveBackupBtActionPerformed

    private void restoreBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restoreBtActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new FileNameExtensionFilter("SQL", "sql"));
        int res = fileChooser.showOpenDialog(this);
        if (res == JFileChooser.APPROVE_OPTION) {
            new Thread(){

                @Override
                public void run() {
                    try {
                        //loadingLb.setVisible(true);
                        boolean restore = Backup.restore(fileChooser.getSelectedFile().getPath());
                        //loadingLb.setVisible(false);
                        if (restore) {
                            JOptionPane.showMessageDialog(null, "Restored Successfully...");
                        }else{
                            JOptionPane.showMessageDialog(null, "Restoring Failed...");
                        }
                    } catch (InterruptedException ex) {
                        Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                
            }.start();
            
        }
    }//GEN-LAST:event_restoreBtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
            */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
            //</editor-fold>
            UIManager.setLookAndFeel(new GraphiteLookAndFeel());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chPasBt;
    private javax.swing.JButton chgPortBt;
    private javax.swing.JLabel detailLb;
    private javax.swing.JButton donBt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton reciBt;
    private javax.swing.JButton restoreBt;
    private javax.swing.JButton serverBt;
    private javax.swing.JButton seveBackupBt;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JButton userBt;
    // End of variables declaration//GEN-END:variables

    private void startServer() throws RemoteException, UnknownHostException{
        statusLabel.setText("Server is starting...");
        donationRegistry = LocateRegistry.createRegistry(port);
        donationRegistry.rebind("DonationServer", new ConnectionControllerImpl());
        
        statusLabel.setText("Server Started...");
        ipAddress = Inet4Address.getLocalHost().getHostAddress().trim();
        detailLb.setVisible(true);
        DonControllerImpl.autoChooseRecipient();
        
        chgPortBt.setEnabled(false);
    }
    
    private void stopServer() throws RemoteException, NotBoundException{
        statusLabel.setText("Server is Stopping...");
        donationRegistry.unbind("DonationServer");
        UnicastRemoteObject.unexportObject(donationRegistry, true);
        
        statusLabel.setText("Server Stopped...");
        
        detailLb.setVisible(false);
        
        chgPortBt.setEnabled(true);
    }

    private void saveNewPort(String msg) {
        String trim = JOptionPane.showInputDialog(msg, port).trim();
        if (trim != null) {
            port = Integer.parseInt(trim);
            File file = new File("./src/other/port.txt");
            try {
                BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(file));
                bufferedWriter.write(Integer.toString(port));
                bufferedWriter.flush();
                bufferedWriter.close();
            } catch (IOException ex) {
                Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
            
    }
    
    private void getPort(){
        File file = new File("./src/other/port.txt");
        if (file.exists()) {
            try {
                BufferedReader bufferedReader = new BufferedReader(new FileReader(file));
                port = Integer.parseInt(bufferedReader.readLine());
                bufferedReader.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            saveNewPort("Port for the Server : ");
        }
    }
}
